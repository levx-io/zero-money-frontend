{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/Notice.tsx","src/constants/index.ts","src/hooks/useDelayedOnBlockEffect.tsx","src/components/TokenName.tsx","src/components/TokenSymbol.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useSwapRouter.tsx","src/components/UnsupportedButton.tsx","src/components/PriceImpactTooHighButton.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","TTL","ALLOWED_SLIPPAGE","Percent","FEE","API_SERVER","process","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","forEach","handle","clearTimeout","TokenName","caption","numberOfLines","ellipsizeMode","marginLeft","small","width","name","TokenSymbol","medium","useDelayedEffect","timeout","key","toString","TokenAmount","formatBalance","balance","decimals","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","selected","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","undefined","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","selectable","viewOnly","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","includes","useSwapRouter","swap","trade","signer","Router","getAddress","feeOnTransfer","allowedSlippage","recipient","ttl","params","swapCallParameters","router","getContract","ROUTER","estimateGas","methodName","args","gasLimit","functions","mul","div","logTransaction","map","arg","addLiquidity","fromToken","toToken","fromAmount","toAmount","deadline","Math","floor","Date","getTime","deduct","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","UnsupportedButton","state","fromSymbol","toSymbol","PriceImpactTooHighButton","useSwapState","useTokenPairState","chainId","updateTokens","getTrade","useSDK","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","swapping","setSwapping","isEmptyValue","block","p","ALCHEMY_PROVIDER","parseBalance","onSwap","result","setFromSymbol","Swap","ChangeNetwork","large","Border","FromTokenSelect","customTokens","ToTokenSelect","setToSymbol","Heading","AmountInput","TokenInput","onAmountChanged","setFromAmount","NoPairNotice","TradeInfo","isETHWETHPair","InfoBox","WrapInfo","SwapInfo","outputAmount","toFixed","price","executionPrice","impact","priceImpact","Meta","label","danger","Number","SwapControls","error","setError","approveRequired","isETH","fromTokenAllowed","gt","isWETH","FetchingButton","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","SwapScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/7.bdcaf61e.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import { Percent } from \"@sushiswap/sdk\";\n\nexport const TTL = 60 * 20;\nexport const ALLOWED_SLIPPAGE = new Percent(\"50\", \"10000\"); // 0.05%\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\nexport const API_SERVER = process.env.NODE_ENV === \"production\" ? \"https://api.levxdao.org\" : \"http://localhost:3001\";\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    viewOnly?: boolean;\n    style?: ViewStyle;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.symbol}\n                viewOnly={true}\n                onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && (\n                <TokenItem\n                    token={token}\n                    selected={true}\n                    onSelectToken={onUnselectToken}\n                    selectable={true}\n                    viewOnly={props.viewOnly}\n                />\n            )}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n    viewOnly?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\" }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? !props.viewOnly && <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import { useCallback } from \"react\";\n\nimport { Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ALLOWED_SLIPPAGE, TTL } from \"../constants\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage: ALLOWED_SLIPPAGE,\n                recipient: await signer.getAddress(),\n                ttl: TTL\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + TTL).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, ALLOWED_SLIPPAGE),\n                deduct(toAmount, ALLOWED_SLIPPAGE),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + TTL).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, ALLOWED_SLIPPAGE),\n                deduct(amountETH, ALLOWED_SLIPPAGE),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + TTL).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, ALLOWED_SLIPPAGE),\n                deduct(toAmount, ALLOWED_SLIPPAGE),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + TTL).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, ALLOWED_SLIPPAGE),\n                deduct(amountETH, ALLOWED_SLIPPAGE),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst PriceImpactTooHighButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"price-impact-too-high\")} disabled={true} />;\n};\nexport default PriceImpactTooHighButton;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ALCHEMY_PROVIDER, EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface SwapState extends TokenPairState {\n    trade?: Trade;\n    unsupported: boolean;\n    swapFee: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, updateTokens } = useContext(EthersContext);\n    const { getTrade } = useSDK();\n    const { swap, calculateSwapFee } = useSwapRouter();\n    const [loading, setLoading] = useState(true);\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            const p = chainId === 1 ? provider : ALCHEMY_PROVIDER;\n            if (state.fromToken && state.toToken && state.fromAmount && p) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, p));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [chainId, provider, state.fromToken, state.toToken, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n        }\n    }, [trade, state.fromAmount]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    state.setFromSymbol(\"\");\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        trade,\n        unsupported,\n        swapFee,\n        onSwap,\n        swapping\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport PriceImpactTooHighButton from \"../components/PriceImpactTooHighButton\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { AmmSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useSwapState, { SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MAX_PRICE_IMPACT = 7;\n\nconst SwapScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"new-order\")} />\n                    <Text light={true}>{t(\"new-order-desc\")}</Text>\n                    <Swap />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <AmmSubMenu />\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const { chainId } = useContext(EthersContext);\n    const state = useSwapState();\n    if (chainId !== 1 && chainId !== 42) return <ChangeNetwork />;\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const { customTokens } = useContext(EthersContext);\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-sell\")}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => !customTokens.find(tk => tk.address === token.address) && token.balance.isZero()}\n            />\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol) {\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-buy\")}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token => token.symbol === state.fromSymbol}\n            />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"amount\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\n            color={\"red\"}\n            style={{ marginTop: Spacing.normal }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (isETHWETHPair(state.fromToken, state.toToken)) return <WrapInfo state={state} />;\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (!state.loading && !state.trade);\n    return (\n        <InfoBox>\n            <SwapInfo state={state} disabled={disabled} />\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const t = useTranslation();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price\")}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price-impact\")}\n                text={impact}\n                suffix={\"%\"}\n                danger={!!impact && Number(impact) > MAX_PRICE_IMPACT}\n                disabled={disabled}\n            />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            isEmptyValue(state.fromAmount) ||\n            (!state.loading && !state.trade) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : impact && Number(impact) > MAX_PRICE_IMPACT ? (\n                <PriceImpactTooHighButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={t(\"swap-\", {\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\n            })}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}