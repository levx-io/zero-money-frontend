{"version":3,"sources":["assets/flags/us.png","assets/flags/cn.png","assets/flags/kr.png","assets/flags/fr.png","assets/flags/es.png","assets/flags/jp.png","assets/images/metamask-dark.png","assets/images/metamask.png","assets/images/icon.png","assets/fonts/IBMPlexSansKR-Light.ttf","assets/fonts/IBMPlexSansKR-Regular.ttf","assets/fonts/IBMPlexSansKR-SemiBold.ttf","src/constants/tokens.ts","src/constants/dimension.ts","src/hooks/useLinker.tsx","src/constants/Fraction.ts","src/utils/getContract.ts","src/utils/index.ts","src/components/Button.tsx","src/constants/contracts.ts","src/utils/fetch-utils.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/hooks/useStyles.tsx","src/components/BackgroundImage.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/Title.tsx","src/components/web/WebSubMenu.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/utils/analytics-utils.ts","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/context/GlobalContext.tsx","src/context/EthersContext.tsx","src/hooks/useTranslation.tsx","src/context/index.tsx","src/components/svg/SvgMoon.tsx","src/components/svg/SvgSun.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","src/components/Text.tsx","src/components/FlexView.tsx","assets/images/icon-circle.png"],"names":["module","exports","ETH","address","ethers","constants","AddressZero","name","symbol","decimals","logoURI","balance","BigNumber","from","LEVX","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","Fraction","numerator","denominator","this","sdk","toString","numeratorToken","denominatorToken","mul","pow","value","NAN","isEmptyValue","ZERO","parseBalance","BASE","isNaN","isZero","fraction","div","eq","gt","lt","maxFractions","str","formatBalance","endsWith","substring","length","Zero","One","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","LPTokenScanner","abi","Swapper","Migratoooooor","ZapIn","ZapOut","getContract","signerOrProvider","contract","Contract","formatUSD","maxFraction","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","formatted","String","split","substr","utils","formatUnits","parseUnits","text","isBigNumber","replace","isETH","token","toLowerCase","isWETH","WETH","isETHWETHPair","fromToken","toToken","convertToken","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","parseCurrencyAmount","toExact","deduct","percent","sub","pow10","exp","Button","props","useColors","accent","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","ROUTER","MASTER_CHEF","SUSHI_BAR","SWAPPER","MIGRATOOOOOOR","OH_GEEZ_LP","LP_TOKEN_SCANNER","ZAP_IN","ZAP_OUT","fetchTokens","account","customTokens","a","async","fetch","response","json","tokens","fetchTokenBalances","map","balances","ALCHEMY_PROVIDER","getBalance","i","fetchTokenWithValue","weth","wethPriceUSD","getPair","provider","fetched","priceUSD","Number","valueUSD","apply","pair","priceETH","convert","priceOf","fetchPools","sushiData","sushi","info","masterchef","masterchefInfo","pools","pool","poolId","reduce","sushiPerBlock","floor","allocPoint","totalAllocPoint","fetchPool","slpBalance","Promise","all","fetchStakedValue","fetchPairTokens","result","apy","calcAPY","derivedETH","totalValueETH","totalSupply","tokenA","tokenB","sushiRewardedPerYear","calcSushiRewardedPerYear","totalValueUSD","multiplier","filter","fetchMyPools","fetchMyPool","fetchMyStake","id","myStake","amountDeposited","pendingSushi","lpToken","stakedValue","masterChef","userInfo","findOrFetchToken","token0","token1","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","pages","page","findPairs","min","toNumber","pairs","flat","index","erc20","find","t","send","meta","fetchTokenMeta","logo","field","callStatic","e","data","fetchLPTokenWithValue","fetchTotalValue","values","add","lpPair","tokenWithValue","tokenReserve","reserveOf","tokenPrice","addresses","tokenBalances","tokenBalance","Colors","common","white","transparent","primary","secondary","green","red","twitter","facebook","light","header","submenu","background","border","borderDark","textDark","textLight","shadow","overlay","dark","inverted","darkMode","useContext","GlobalContext","useStyles","shadowColor","attrs","borderWidth","borderRadius","radius","padding","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","BackgroundImage","position","aspectRatio","marginTop","marginLeft","alignSelf","Container","select","web","contentContainerStyle","flex","default","Content","marginRight","marginBottom","Title","HomeSubMenu","useTranslation","WebSubMenu","items","title","AmmSubMenu","MigrateSubMenu","AirdropsSubMenu","StakingSubMenu","FarmingSubMenu","top","justifyContent","alignItems","item","MenuItem","key","match","useRouteMatch","active","isExact","to","paddingTop","paddingBottom","textDecoration","AppHeader","View","StatusBar","translucent","ConnectButton","setEthereum","EthersContext","metaMask","ethereum","isMetaMask","request","method","alert","containerStyle","marginHorizontal","WalletConnectButton","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","Image","WebFooter","simple","WebScreen","right","bottom","left","ConnectToWallet","AppScreen","useQuery","location","useLocation","URLSearchParams","search","Screen","setLocale","query","useEffect","locale","SocialIcon","iconColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","raised","reverse","reverseColor","FLAGS","us","cn","kr","fr","es","jp","Flag","TouchableHighlight","pathname","Text","note","Constants","manifest","version","logTransaction","tx","args","Analytics","hash","gasLimit","gasPrice","chainId","WBTC","Token","DAI","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","bases","basePairs","flatMap","base","otherBase","t0","t1","allPairCombinations","Boolean","b","customBases","customBasesA","customBasesB","equals","Fetcher","fetchPairData","useSDK","getTotalSupply","getTrade","fromAmount","eth","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","calculateAmountOfLPTokenMinted","toAmount","liquidityToken","minted","getLiquidityMinted","raw","React","createContext","load","clear","_locale","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","children","colorScheme","useColorScheme","useState","Localization","Provider","AsyncStorage","getItem","mode","mne","removeItem","l","setItem","GlobalContextConsumer","Consumer","providers","AlchemyProvider","_ethereum","signer","ensName","status","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","setProvider","setSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","translate","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","onChainChanged","onDisconnect","on","off","lookupAddress","ens","list","p","price","parse","JSON","findIndex","custom","stringify","spender","MaxUint256","estimateGas","approve","allowance","who","balanceOf","listener","old","onBlock","block","Object","entries","EthersContextConsumer","i18n","translations","en","zh","ko","defaultLocale","fallbacks","ContextProvider","SvgMoon","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","fill","d","SvgSun","cx","cy","r","transform","DarkModeSwitch","activeOpacity","underlayColor","margin","CloseButton","MobileWebMenuItem","startsWith","Status","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","icon","Menu","MenuIcon","onExpand","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","HarvestScreen","LiquidityScreen","MigrateScreen","MigrateLPScreen","ClaimScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","HomeScreen","Screens","WebScreens","menuExpanded","setMenuExpanded","fallback","exact","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","regular","bold","AppLoading","global","Buffer","medium","h1Style","h2Style","h3Style","h4Style","caption","flexDirection","direction"],"mappings":"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","file":"static/js/app.886d1667.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","module.exports = __webpack_public_path__ + \"static/media/fr.dda60be7.png\";","module.exports = __webpack_public_path__ + \"static/media/es.82844a36.png\";","module.exports = __webpack_public_path__ + \"static/media/jp.27444bf9.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.70db5536.png\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSansKR-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSansKR-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSansKR-SemiBold.ttf\";","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    address: ethers.constants.AddressZero,\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    decimals: 18,\n    logoURI: \"https://levxdao.org/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n\nexport const LEVX: Token = {\n    address: \"0xf474E526ADe9aD2CC2B66ffCE528B1A51B91FCdC\",\n    name: \"LevX DAŌh..Geez (LEVX)\",\n    symbol: \"LEVX\",\n    decimals: 18,\n    logoURI:\n        \"https://raw.githubusercontent.com/sushiswap/logos/main/network/ethereum/0xf474E526ADe9aD2CC2B66ffCE528B1A51B91FCdC.jpg\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 720;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport ZapIn from \"@sushiswap/zapper/artifacts/Sushiswap_ZapIn_General_V2.json\";\nimport ZapOut from \"@sushiswap/zapper/artifacts/Sushiswap_ZapOut_General_V1.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Migratoooooor from \"./Migratoooooor.json\";\nimport Swapper from \"./Swapper.json\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    LPTokenScanner: { abi: LPTokenScanner },\n    Swapper,\n    Migratoooooor,\n    ZapIn,\n    ZapOut\n};\n\nconst getContract = (name: string, address: string, signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport default getContract;\n","import { ChainId, CurrencyAmount, Percent, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport getContract from \"./getContract\";\n\nexport const formatUSD = (value: number, maxFraction = 0) => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction\n    });\n    return formatter.format(value);\n};\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n    const formatted = String(value * 100);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const isETH = (token?: Token) => token?.address.toLowerCase() === ETH.address.toLowerCase();\n\nexport const isWETH = (token?: Token) => token?.address.toLowerCase() === WETH[1].address.toLowerCase();\n\nexport const isETHWETHPair = (fromToken?: Token, toToken?: Token) => {\n    return (isETH(fromToken) && isWETH(toToken)) || (isWETH(fromToken) && isETH(toToken));\n};\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const deduct = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n\nexport { getContract };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { accent, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || accent : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SWAPPER = \"0xA304c7Ef74BA1638a42ef1AB9d7f62e66A220F3a\";\nexport const MIGRATOOOOOOR = \"0x67f67859B1F03e556d6c10344713a1b5eB7c8160\";\nexport const OH_GEEZ_LP = \"0x854B54c39C4d8C6c781Ad6F7b036338d47F163F8\";\nexport const LEVX_LP = \"0xdE0C1dC7f2b67705Cca50039418715F9C7F8D53B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ZAP_IN = \"0xfF350eDc2242Ca4d7252A64746aec4A5487a852B\";\nexport const ZAP_OUT = \"0xf12CAB7Acaa14Eed3bEa82199ea2f5c2C2194B81\";\nexport const LEVX_TOKEN = \"0xf474E526ADe9aD2CC2B66ffCE528B1A51B91FCdC\";\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY, Pair } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport {\n    convertToken,\n    formatBalance,\n    getContract,\n    isETH,\n    isWETH,\n    parseBalance,\n    parseCurrencyAmount,\n    pow10\n} from \"./index\";\n\nconst blocksPerDay = 6500;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://levxdao.org/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ];\n};\n\nexport const fetchTokenWithValue = async (\n    token: Token,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    let fetched: TokenWithValue;\n    if (isETH(token) || isWETH(token)) {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    return fetched;\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const reduce = await sushiData.masterchef.pool({ poolId: \"45\" });\n    if (!reduce) return undefined;\n    const sushiPerBlock = Math.floor(100 - 100 * (reduce.allocPoint / masterchefInfo.totalAllocPoint));\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.pair)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        if (pool.slpBalance === 0) return null;\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            if (!result[0]) return null;\n            const apy = calcAPY(\n                info.derivedETH,\n                sushiPerBlock,\n                pool.allocPoint,\n                masterchefInfo.totalAllocPoint,\n                result[0].totalValueETH,\n                pool.slpBalance,\n                result[0].totalSupply\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    sushiPerBlock,\n                    pool.allocPoint,\n                    masterchefInfo.totalAllocPoint,\n                    result[0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0].totalSupply), 18),\n                totalValueUSD: result[0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, sushiPerBlock, allocPoint, totalAllocPoint, totalValueETH, slpBalance, totalSupply) => {\n    return (\n        (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) /\n        (totalValueETH * (slpBalance / totalSupply))\n    );\n};\n\nconst calcSushiRewardedPerYear = (sushiPerBlock, allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (pair: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", pair, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const erc20 = getContract(\"ERC20\", pair.token, provider);\n            const result = await Promise.all([\n                erc20.decimals(),\n                erc20.totalSupply(),\n                fetchPairTokens(pair.token, tokens, provider)\n            ]);\n            return {\n                address: pair.token,\n                decimals: Number(result[0]),\n                name: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol + \" LP Token\",\n                symbol: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol,\n                balance: ethers.BigNumber.from(balances[index]),\n                totalSupply: result[1],\n                tokenA: result[2].tokenA,\n                tokenB: result[2].tokenB\n            } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nexport const fetchLPTokenWithValue = async (\n    lpToken: LPToken,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#ed1c27\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#ed1c27\",\n        header: \"#ed1c27\",\n        submenu: \"#024fa2\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#ffffff\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"#00000020\",\n        background: \"#0e0f23\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#6060a033\",\n        borderDark: \"#6060a0\",\n        textDark: \"#ffffff\",\n        textMedium: \"#d5d1cc\",\n        textLight: \"#cccccc\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = (inverted?: boolean) => {\n    let { darkMode } = useContext(GlobalContext);\n    if (inverted) {\n        darkMode = !darkMode;\n    }\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 0.5,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 4 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst BackgroundImage = ({ style }: { style?: ViewStyle }) => {\n    const { background } = useColors();\n    return (\n        <View\n            style={[\n                {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    aspectRatio: 1,\n                    backgroundColor: background\n                },\n                style\n            ]}>\n            <View style={{ marginTop: -400, marginLeft: -1000, alignSelf: \"center\" }}>\n                {/*{darkMode ? <SvgBackgroundDark {...props} /> : <SvgBackgroundLight {...props} />}*/}\n            </View>\n        </View>\n    );\n};\n\nexport default BackgroundImage;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React, { useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, SCREEN_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { darkMode } = useContext(GlobalContext);\n    const { borderDark: borderColor, background } = useColors();\n    const { border, shadow } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderColor : undefined }),\n                    ...shadow(),\n                    backgroundColor: background,\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : SCREEN_WIDTH - Spacing.large,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: IS_DESKTOP ? Spacing.normal : Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text\n            fontWeight={props.fontWeight || \"bold\"}\n            disabled={props.disabled}\n            style={[{ marginBottom: Spacing.tiny, fontSize: IS_DESKTOP ? 40 : 28 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React, { FC, useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\nexport const HomeSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"total-value\"),\n                    path: \"/\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const AmmSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"new-order\"),\n                    path: \"/swap\"\n                },\n                {\n                    title: t(\"add-liquidity\"),\n                    path: \"/liquidity\"\n                },\n                {\n                    title: t(\"remove-liquidity\"),\n                    path: \"/liquidity/remove\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const MigrateSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"migrate\"),\n                    path: \"/migrate\"\n                },\n                {\n                    title: t(\"migrate-liquidity\"),\n                    path: \"/migrate/lp\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const AirdropsSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"airdrops\"),\n                    path: \"/airdrops\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const StakingSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"stake\"),\n                    path: \"/staking\"\n                },\n                {\n                    title: t(\"unstake\"),\n                    path: \"/staking/unstake\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const FarmingSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"plant-lp-tokens\"),\n                    path: \"/farming\"\n                },\n                {\n                    title: t(\"harvest-sushi\"),\n                    path: \"/farming/harvest\"\n                }\n            ]}\n        />\n    );\n};\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { accent, textLight } = useColors(!darkMode);\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport Button from \"../Button\";\nimport WebFooter from \"./WebFooter\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/images/metamask-dark.png\")\n            : require(\"../../../assets/images/metamask.png\")\n        : require(\"../../../assets/images/icon.png\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n            <WebFooter simple={true} />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const t = useTranslation();\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(t(\"no-ethereum-provider-found\"));\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : t(\"connect\")}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { secondary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : secondary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext, useEffect } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { useLocation } from \"react-router-dom\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst Screen = props => {\n    const { setLocale } = useContext(GlobalContext);\n    const query = useQuery();\n    useEffect(() => {\n        const locale = query.get(\"locale\");\n        if (locale) {\n            setLocale(locale);\n        }\n    }, [query]);\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nconst useQuery = () => {\n    const location = useLocation();\n    return new URLSearchParams(location.search);\n};\n\nexport default Screen;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/LevXDAOhGeez\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/levxdao\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/oh-geez\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst FLAGS = {\n    us: require(\"../../../assets/flags/us.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\"),\n    fr: require(\"../../../assets/flags/fr.png\"),\n    es: require(\"../../../assets/flags/es.png\"),\n    jp: require(\"../../../assets/flags/jp.png\")\n};\n\nconst WebFooter = ({ simple = false }) => {\n    return (\n        <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n            {!simple && <SocialIcons />}\n            <FlexView style={{ marginTop: Spacing.small }}>\n                <Flag name={\"us\"} locale={\"en\"} />\n                <Flag name={\"es\"} locale={\"es\"} />\n                <Flag name={\"fr\"} locale={\"fr\"} />\n                <Flag name={\"cn\"} locale={\"zh\"} />\n                <Flag name={\"jp\"} locale={\"jp\"} />\n                <Flag name={\"kr\"} locale={\"ko\"} />\n            </FlexView>\n            <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                Built by the Dicktator of LevX DAO (v{Constants.manifest.version})\n            </Text>\n        </View>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={FLAGS[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst WBTC = new Token(ChainId.MAINNET, \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\", 8, \"WBTC\", \"Wrapped BTC\");\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], WBTC, DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET], WBTC]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, TokenAmount, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, isETH } from \"../utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const eth = isETH(fromToken);\n                const from = convertToken(fromToken);\n                const to = isETH(toToken) ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = eth\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            const minted = pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n            return ethers.BigNumber.from(minted.raw.toString());\n        }\n    };\n\n    return {\n        getTrade,\n        getPair,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nexport default useSDK;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport * as Localization from \"expo-localization\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    locale: \"\",\n    setLocale: async (_locale: string) => {},\n    darkMode: false,\n    setDarkMode: async (_darkMode: boolean) => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [locale, setLocale] = useState(Localization.locale);\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    setLocale((await AsyncStorage.getItem(\"locale\")) || Localization.locale);\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                locale,\n                setLocale: async (l: string) => {\n                    await AsyncStorage.setItem(\"locale\", l);\n                    setLocale(l);\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport useSDK from \"../hooks/useSDK\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { getContract, isWETH } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens, fetchTokenWithValue } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(1, process.env.MAINNET_API_KEY);\nexport const KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(42, process.env.KOVAN_API_KEY);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    status: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as TokenWithValue[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const { getPair } = useSDK();\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<TokenWithValue[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n    const translate = useTranslation();\n    const status = !!address\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : translate(\"menu.not-connected\");\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum, chainId]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await ALCHEMY_PROVIDER.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && chainId && customTokens) {\n            try {\n                const list = await fetchTokens(address, customTokens);\n                const weth = list.find(t => isWETH(t));\n                const p = chainId === 1 ? provider : ALCHEMY_PROVIDER;\n                if (list?.length > 0 && weth && p) {\n                    const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n                    setTokens(\n                        await Promise.all(\n                            list.map(async token => await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, p))\n                        )\n                    );\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && chainId && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, chainId, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return erc20.allowance(address, spender);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                chainId,\n                address,\n                ensName,\n                status,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import { useContext } from \"react\";\n\nimport i18n from \"i18n-js\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useTranslation = () => {\n    const { locale } = useContext(GlobalContext);\n    i18n.translations = {\n        en: require(\"../constants/strings/en.json\"),\n        zh: require(\"../constants/strings/zh.json\"),\n        ko: require(\"../constants/strings/ko.json\"),\n        fr: require(\"../constants/strings/fr.json\"),\n        es: require(\"../constants/strings/es.json\"),\n        jp: require(\"../constants/strings/jp.json\")\n    };\n    i18n.locale = locale;\n    i18n.defaultLocale = \"en-US\";\n    i18n.fallbacks = true;\n    return i18n.t;\n};\n\nexport default useTranslation;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgMoon(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M0 0h519.851v519.851H0z\" />\n            <Path\n                d=\"M248.7 44.15c-33.5 29.48-54.6 72.67-54.6 120.76 0 88.79 72 160.88 160.8 160.88 48.1 0 91.3-21.15 120.8-54.64-5.9 114.05-100.3 204.84-215.8 204.84-119.2 0-216.1-96.81-216.1-216.06C43.8 144.44 134.6 50 248.7 44.15z\"\n                fill=\"#fff\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgMoon;\n","import * as React from \"react\";\nimport Svg, { Circle, Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgSun(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M.056 0h519.851v519.851H.056z\" />\n            <Path\n                d=\"M260 476.13l-16.5-62.6a154.397 154.397 0 0032.9 0l-16.4 62.6zM342.7 459.67l-39.1-51.55c10.6-3.13 20.8-7.37 30.3-12.57l8.8 64.12zM186 395.55c9.6 5.23 19.7 9.47 30.4 12.57l-39.2 51.55 8.8-64.12zM412.8 412.8l-55.9-32.67c8.6-6.9 16.4-14.7 23.3-23.26l32.6 55.93zM139.8 356.87a156.5 156.5 0 0023.2 23.26l-55.9 32.67 32.7-55.93zM459.7 342.66l-64.1-8.77c5.2-9.56 9.5-19.72 12.6-30.37l51.5 39.14zM111.8 303.52c3.1 10.64 7.3 20.81 12.6 30.37l-64.2 8.77 51.6-39.14zM476.2 259.93l-62.6 16.43c.6-5.4.9-10.88.9-16.43 0-5.55-.3-11.04-.9-16.43l62.6 16.43zM106.4 243.5c-.6 5.39-.9 10.88-.9 16.43 0 5.55.3 11.03.9 16.43l-62.6-16.43 62.6-16.43zM408.2 216.33c-3.2-10.64-7.4-20.81-12.6-30.36l64.1-8.78-51.5 39.14zM124.4 185.97c-5.3 9.55-9.5 19.71-12.6 30.36l-51.6-39.14 64.2 8.78zM163 139.73c-8.5 6.9-16.3 14.69-23.2 23.25l-32.7-55.93 55.9 32.68zM380.2 162.98c-6.9-8.56-14.7-16.36-23.3-23.25l55.9-32.68-32.6 55.93zM333.9 124.3c-9.5-5.22-19.7-9.47-30.3-12.56l39.1-51.56-8.8 64.12zM216.4 111.74c-10.7 3.12-20.8 7.36-30.4 12.56l-8.8-64.12 39.2 51.56zM276.4 106.33c-5.4-.59-10.9-.88-16.4-.88-5.6 0-11.1.29-16.5.88l16.5-62.6 16.4 62.6z\"\n                fill=\"#ffffff\"\n            />\n            <Circle\n                cx={26447}\n                cy={9542.46}\n                r={216.2}\n                fill=\"#ffffff\"\n                transform=\"matrix(.5998 0 0 .5998 -15602.944 -5463.63)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgSun;\n","import React, { useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgMoon from \"./svg/SvgMoon\";\nimport SvgSun from \"./svg/SvgSun\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const { overlay } = useColors();\n    const onPress = async () => {\n        await setDarkMode(!darkMode);\n    };\n    return (\n        <View style={[{ marginTop: Spacing.tiny / 2 }, props.style]}>\n            <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={onPress}>\n                {darkMode ? (\n                    <SvgMoon width={24} height={24} style={{ margin: 3 }} />\n                ) : (\n                    <SvgSun width={30} height={30} />\n                )}\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\n// tslint:disable-next-line:max-func-body-length\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const t = useTranslation();\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <View style={{ marginTop: Spacing.small }}>\n                        <CloseButton onPress={onCollapse} />\n                    </View>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <DarkModeSwitch style={{ marginBottom: 4 }} />\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={t(\"menu.home\")} path={\"/\"} />\n                        <MobileWebMenuItem title={t(\"menu.airdrops\")} path={\"/airdrops\"} />\n                        <MobileWebMenuItem title={t(\"menu.amm\")} path={\"/swap\"} />\n                        <MobileWebMenuItem title={t(\"menu.migrate\")} path={\"/migrate\"} />\n                        {/*<MobileWebMenuItem title={t(\"menu.stake\")} path={\"/staking\"} />*/}\n                        {/*<MobileWebMenuItem title={t(\"menu.farm\")} path={\"/farming\"} />*/}\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, status } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{status}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{ fontFamily: \"regular\", fontSize: 15, color: accent, alignSelf: \"flex-end\" }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import React, { FC, useContext } from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const icon = require(\"../../../assets/images/icon-circle.png\");\n    return (\n        <View style={{ alignSelf: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Image source={icon} style={{ width: 40, height: 40, marginTop: 4, marginLeft: -16 }} />\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    const t = useTranslation();\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={t(\"menu.home\")} path={\"/\"} />\n            <MenuItem title={t(\"menu.airdrops\")} path={\"/airdrops\"} />\n            <MenuItem title={t(\"menu.amm\")} path={\"/swap\"} />\n            <MenuItem title={t(\"menu.migrate\")} path={\"/migrate\"} />\n            {/*<MenuItem title={t(\"menu.stake\")} path={\"/staking\"} />*/}\n            {/*<MenuItem title={t(\"menu.farm\")} path={\"/farming\"} />*/}\n            <DarkModeSwitch style={{ marginLeft: Spacing.small }} />\n            <Status />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, textLight } = useColors(!darkMode);\n    const match = useRouteMatch(path);\n    const active = (path === \"/\" ? match?.isExact : true) && match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, marginBottom: -4, textDecoration: \"none\" }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 18,\n                    color: active ? textDark : textLight,\n                    padding: 3\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const t = useTranslation();\n    const { darkMode } = useContext(GlobalContext);\n    const { textLight, green, borderDark } = useColors(!darkMode);\n    const { ethereum, chainId, address, status } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(t(\"do-you-want-to-disconnect\"))) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginTop: Spacing.tiny / 2,\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{status}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"loading\")} />\n                </Content>\n            </Container>\n            <WebSubMenu items={[]} />\n        </Screen>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst HarvestScreen = lazy(() => import(\"./HarvestScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MigrateLPScreen = lazy(() => import(\"./MigrateLPScreen\"));\nconst ClaimScreen = lazy(() => import(\"./AirdropsScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\nconst HomeScreen = lazy(() => import(\"./HomeScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Suspense fallback={<EmptyScreen />}>\n                    <Switch>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        <Route path={\"/farming/harvest\"}>\n                            <HarvestScreen />\n                        </Route>\n                        <Route path={\"/farming\"}>\n                            <FarmingScreen />\n                        </Route>\n                        <Route path={\"/migrate/lp\"}>\n                            <MigrateLPScreen />\n                        </Route>\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/airdrops\"}>\n                            <ClaimScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Route path={\"/\"} exact={true}>\n                            <HomeScreen />\n                        </Route>\n                        <Redirect to={\"/\"} />\n                    </Switch>\n                </Suspense>\n                <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: require(\"./assets/fonts/IBMPlexSansKR-Light.ttf\"),\n        regular: require(\"./assets/fonts/IBMPlexSansKR-Regular.ttf\"),\n        bold: require(\"./assets/fonts/IBMPlexSansKR-SemiBold.ttf\")\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","module.exports = __webpack_public_path__ + \"static/media/icon-circle.78e243bf.png\";"],"sourceRoot":""}